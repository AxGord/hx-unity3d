package unityEngine;
import cs.NativeArray;
@:native("UnityEngine.Application") extern class Application {
	static var loadedLevel:Int;
	static var loadedLevelName:String;
	static var isLoadingLevel:Bool;
	static var levelCount:Int;
	static var streamedBytes:Int;
	static var isPlaying:Bool;
	static var isEditor:Bool;
	static var isWebPlayer:Bool;
	static var platform:unityEngine.RuntimePlatform;
	static var runInBackground:Bool;
	static var dataPath:String;
	static var streamingAssetsPath:String;
	static var persistentDataPath:String;
	static var temporaryCachePath:String;
	static var srcValue:String;
	static var absoluteURL:String;
	static var unityVersion:String;
	static var webSecurityEnabled:Bool;
	static var targetFrameRate:Int;
	static var systemLanguage:unityEngine.SystemLanguage;
	static var backgroundLoadingPriority:unityEngine.ThreadPriority;
	static var internetReachability:unityEngine.NetworkReachability;
	static var genuine:Bool;
	static var genuineCheckAvailable:Bool;
	static function Quit():Void;
	static function CancelQuit():Void;
	static function LoadLevel(name:String):Void;
	static function LoadLevelAsync(levelName:String):unityEngine.AsyncOperation;
	static function LoadLevelAdditiveAsync(levelName:String):unityEngine.AsyncOperation;
	static function LoadLevelAdditive(name:String):Void;
	static function GetStreamProgressForLevel(levelName:String):Float;
	static function CanStreamedLevelBeLoaded(levelName:String):Bool;
	@:overload(function(filename:String, superSize:Int):Void{})
	static function CaptureScreenshot(filename:String):Void;
	static function ExternalCall(functionName:String, args:NativeArray<Dynamic>):Void;
	static function ExternalEval(script:String):Void;
	static function OpenURL(url:String):Void;
	//static function RegisterLogCallback(handler:unityEngine.Application.LogCallback):Void;
	//static function RegisterLogCallbackThreaded(handler:unityEngine.Application.LogCallback):Void;
	static function RequestUserAuthorization(mode:unityEngine.UserAuthorization):unityEngine.AsyncOperation;
	static function HasUserAuthorization(mode:unityEngine.UserAuthorization):Bool;
}