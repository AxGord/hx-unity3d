package unityEngine;
@:native("UnityEngine.Application") extern class Application {
	static var loadedLevel:Int;
	static var loadedLevelName:String;
	static var isLoadingLevel:Bool;
	static var levelCount:Int;
	static var streamedBytes:Int;
	static var isPlaying:Bool;
	static var isEditor:Bool;
	static var isWebPlayer:Bool;
	static var platform:unityEngine.RuntimePlatform;
	static var runInBackground:Bool;
	static var dataPath:String;
	static var streamingAssetsPath:String;
	static var persistentDataPath:String;
	static var temporaryCachePath:String;
	static var srcValue:String;
	static var absoluteURL:String;
	static var unityVersion:String;
	static var webSecurityEnabled:Bool;
	static var targetFrameRate:Int;
	static var systemLanguage:unityEngine.SystemLanguage;
	static var backgroundLoadingPriority:unityEngine.ThreadPriority;
	static var internetReachability:unityEngine.NetworkReachability;
	static var genuine:Bool;
	static var genuineCheckAvailable:Bool;
	function Quit():Void;
	function CancelQuit():Void;
	function LoadLevel(name:String):Void;
	function LoadLevelAsync(levelName:String):unityEngine.AsyncOperation;
	function LoadLevelAdditiveAsync(levelName:String):unityEngine.AsyncOperation;
	function LoadLevelAdditive(name:String):Void;
	function GetStreamProgressForLevel(levelName:String):Float;
	function CanStreamedLevelBeLoaded(levelName:String):Bool;
	function CaptureScreenshot(filename:String, superSize:unityEngine.int = 0):Void;
	function ExternalCall(functionName:String, params args:unityEngine.Array<object>):Void;
	function ExternalEval(script:String):Void;
	function OpenURL(url:String):Void;
	function RegisterLogCallback(handler:unityEngine.Application.LogCallback):Void;
	function RegisterLogCallbackThreaded(handler:unityEngine.Application.LogCallback):Void;
	function RequestUserAuthorization(mode:unityEngine.UserAuthorization):unityEngine.AsyncOperation;
	function HasUserAuthorization(mode:unityEngine.UserAuthorization):Bool;
}